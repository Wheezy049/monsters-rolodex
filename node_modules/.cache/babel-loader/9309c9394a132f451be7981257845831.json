{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\React project\\\\monsters-rolodex-v2\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport { getData } from './utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchField, setSearchField] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilterMonsters] = useState(monsters);\n  useEffect(() => {\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    //   .then((response) => response.json())\n    //   .then((users) => setMonsters(users));\n    const fetchUsers = async () => {\n      const users = await getData('https://jsonplaceholder.typicode.com/users');\n      setMonsters(users);\n    };\n\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilterMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iBZtYsThkp22U1XFIIwzUL25+70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Documents/React project/monsters-rolodex-v2/src/App.tsx"],"names":["useState","useEffect","CardList","SearchBox","getData","App","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilterMonsters","fetchUsers","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,cAAxB;;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAY,EAAZ,CAAxC;AACA,QAAM,CAACU,gBAAD,EAAmBC,iBAAnB,IAAwCX,QAAQ,CAACQ,QAAD,CAAtD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AAEA,UAAMW,UAAU,GAAG,YAAW;AAC5B,YAAMC,KAAK,GAAG,MAAMT,OAAO,CAAY,4CAAZ,CAA3B;AACAK,MAAAA,WAAW,CAACI,KAAD,CAAX;AACD,KAHD;;AAKAD,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT;AAaAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,mBAAmB,GAAGN,QAAQ,CAACO,MAAT,CAAiBC,OAAD,IAAa;AACvD,aAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0Cb,WAA1C,CAAP;AACD,KAF2B,CAA5B;AAIAK,IAAAA,iBAAiB,CAACG,mBAAD,CAAjB;AACD,GANQ,EAMN,CAACN,QAAD,EAAWF,WAAX,CANM,CAAT;;AAQA,QAAMc,cAAc,GAAIC,KAAD,IAAgD;AACrE,UAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,iBAAnB,EAA1B;AACAX,IAAAA,cAAc,CAACe,iBAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,eAAe,EAAEF,cAFnB;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEV;AAApB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3CD;;GAAML,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react';\r\nimport CardList from './components/card-list/card-list.component';\r\nimport SearchBox from './components/search-box/search-box.component';\r\nimport './App.css';\r\nimport { getData } from './utils/data';\r\n\r\nexport type Monster = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst App = () => {\r\n  const [searchField, setSearchField] = useState('');\r\n  const [monsters, setMonsters] = useState<Monster[]>([]);\r\n  const [filteredMonsters, setFilterMonsters] = useState(monsters);\r\n\r\n  useEffect(() => {\r\n    // fetch('https://jsonplaceholder.typicode.com/users')\r\n    //   .then((response) => response.json())\r\n    //   .then((users) => setMonsters(users));\r\n\r\n    const fetchUsers = async () =>{\r\n      const users = await getData<Monster[]>('https://jsonplaceholder.typicode.com/users');\r\n      setMonsters(users);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const newFilteredMonsters = monsters.filter((monster) => {\r\n      return monster.name.toLocaleLowerCase().includes(searchField);\r\n    });\r\n\r\n    setFilterMonsters(newFilteredMonsters);\r\n  }, [monsters, searchField]);\r\n\r\n  const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const searchFieldString = event.target.value.toLocaleLowerCase();\r\n    setSearchField(searchFieldString);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1 className='app-title'>Monsters Rolodex</h1>\r\n\r\n      <SearchBox\r\n        className='monsters-search-box'\r\n        onChangeHandler={onSearchChange}\r\n        placeholder='search monsters'\r\n      />\r\n      <CardList monsters={filteredMonsters} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}